
from Classes.PDF_Extractor import Extractor
from Classes.OllamaAI import AI


###############
#Static
###############


#TODO: Have this generated by AI
UNWANTED = [
    "Discount Mufflers",
    "Prepared by AI on 05/14/2024", 
    "Customer List",
    "Confidential",
    "Addr 1 Addr 2 City, State",
    "Appointments Listing",
    "From 3/11/2023 to 3/11/2024",
    "3/27/24 2:22 PM",
    "Chi Arthritis & Rheum Associates"
]


#############
#Objects
#############

#TODO: Adjust page_identifier to tuple
extractor = Extractor(
    target_document="Source-Documents/patientlist.pdf",
    delimiter="Total Appointments",
    unwanted_text=UNWANTED,
    page_identifier=True,
    page_minimum=2,
    page_maximum=3,
    )

ai = AI(
    server_ip="127.0.0.1:11434",
    data_type="Name and Address",
    data_form_factor="[First and Last Name], [Street Address + Suite/Apartment if available], [City State Abbreviation and Zip-Code].",
    validating_modifier="Give no notes or comments."
    )


#############
#Main Body
#############


#Use the delimiter to segregate instances of data if present
if extractor.delimiter:
    extractor.separate_data()


#Log the final output in csv format using AI organized data
with open("Logging/final.csv", "w") as f:
    for line in extractor.lines:
        data = ai.arrange_line(line)

        #Typical address data
        if data.count(",") == 3:
            temporary_list = data.split(",")
            name = temporary_list[0]
            street = temporary_list[1]
            city = temporary_list[2]
            state_zip = f"{temporary_list[3]}\n"

            organized_data = f"{name}, {street}, {city} {state_zip}"
        #Untypical address data (1 block in csv)
        else:
            try:
                temporary_list = data.split(",")
                organized_data = f"{' '.join(temporary_list)}\n"
            except:
                organized_data = data
        
        f.write(organized_data)

    
